
// create .gitignore file to ignore files from ulpoading
git init
git add .
git commit -m "message"
git remote add origin https://github.com/avinashvermaaa/repo.git
git branch -M main
git push -u origin main

go to dir. rm -rf .git ( to remove git from that  { file/ folder/ dir./ repo } )
cd file\ name/filenamewith\ space/   --> {file name/ filenamewith space}

-------------------------------------------------------------------------------------------------------------------------------------------
Git_BASH / Github :-
-------------------------------------------------------------------------------------------------------------------------------------------
git config --global user.name "Avinash Kumar"

git config --global user.email "code6969nation@gmail.com"


clear    	        ( to clear the screen)
cd 			( change directory )
mkdir  filename		( make directory )
touch  filename 	( create other file like ok.txt )
mv     filename		( remove file from folder )
| Command                     | Description                                                                                     |
|-----------------------------|-------------------------------------------------------------------------------------------------|
| git status                  | Shows the current status of the working directory and staging area, including changes to be committed, untracked files, and 					files that are staged for commit. |
| ls                          | Lists all files and directories in the current folder or directory.                           |
| ls -a                       | Lists all files and directories in the current folder or directory, including hidden files (those starting with a dot). |
| git init                    | Initializes a new Git repository in the current directory, creating a .git subdirectory.   |             |
| git add folder_name         | Stages all changes (new, modified, deleted files) in the specified folder for the next commit. |
| git add .                   | Stages all changes (new, modified, deleted files) in the current directory and its subdirectories for the next commit. |
| git add --all               | Stages all changes (new, modified, deleted files) in the entire repository for the next commit, including files that have been 					deleted. |
| git commit -m "msg"         | Commits the staged changes to the repository with a descriptive message.        
| git rm filename             | Removes the specified file from the working directory and stages the removal for the next commit. |
mv


				******************************************************************************************************************************************************

config user -> config email -> cd -> mkdir -> git init -> touch file.txt -> git add * -> git status -> git commit -> gitk -> git gui -> git stash 

$ git config --global user.name "Avinash Kumar"                       // --> global username 
$ git config --global user.email  "code6969nation@gmail.com"  	      // --> global user email

$ git config --list						      // --> list all variables and their default values


git config levels :- 
	--local
	--global
	--system  
$ git gui 							     // --> for gui
$ gitk 								     // --> for gui history of merge,pull,push 

$ mkdir 							     // --> make directory/ make file
$ git init 							     // --> initialise git in the repo or directory  	
$ touch <file name>						     // --> create file (note.txt)

$ git status 							     // --> check staging of files / commit status / list all untracked files

$ git add <file name>						     // --> create file (note.txt)
$ git add * 							     // --> add all file to staging / tracking phase
$ git add -A							     // --> add all file to staging / tracking phase

$ git add --ignore-removal 					     // --> add all new & updates files only
$ git add -u 							     // --> add all modified and deleted files 
$ git add *.txt or *.java 					     // --> add all files of similiar type to staging area

$ git reset <file name>						     // --> remove file from staging area






-------------------------------------------------------------------------------------------------------------------------------------------
Command Prompt :-
-------------------------------------------------------------------------------------------------------------------------------------------

color help / hlep color -> change color of cmd ( color A0-> A-bg_green 7->text color black) :) {7,0->white,black}
dir/s 			-> hacking prank
tree 			-> hacking prank

cmd any file		type cmd at address bar of any folder and it will open that filepath in cmd 
cipher /E & /D		encryption and decryption at any file / folder using cmd

cls  			clear screen
dir  			lists all folder inside a folder or drive
f: 			drive f
e:			drive e
c:			drive c -> usersGALAXY

cd 			change directory
mkdir / md 		make directory    	            ( mkdir folder_name )
ren 			rename directory 		    ( ren folder_name new_name) ( ren 8908.pdf new8908.pdf)
rd 			remove directory  		    ( rd folder_name)

"filename.extension"		-> open file inside any folder / drive ( "hello.txt" or "8908.pdf" )
copy con filename.extension   & in next line write message  -> it create a file like helo.txt with message inside
	{ copy con hello.txt -> in next line(hello this is written using cmd) -> }
echo message > filename.txt 
notepad hello.txt
