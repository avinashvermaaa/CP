// https://www.geeksforgeeks.org/problems/k-closest-elements3619/1



#include <bits/stdc++.h>
using namespace std;


class Solution {
 public:
int findCrossOver(vector<int>&arr, int low, int high, int x) 
{ 
if (arr[high] <= x) 
    return high; 
if (arr[low] > x) 
    return low; 
 
int mid = (low + high)/2; 
 
if (arr[mid] <= x && arr[mid+1] > x) 
    return mid; 
 
if(arr[mid] < x) 
return findCrossOver(arr, mid+1, high, x); 
 
return findCrossOver(arr, low, mid - 1, x); 
} 
vector<int> printKClosest(vector<int> arr, int n, int k, int x) {
    vector<int>v;
    if(n==0)
    return v;
    
    int l = findCrossOver(arr, 0, n-1, x), r = l+1, land = 0;
    if (arr[l] == x) 
    l--; 
 
    while (l >= 0 && r < n && land < k){ 
        if (x - arr[l] < arr[r] - x) 
        v.push_back(arr[l--]);
        else
        v.push_back(arr[r++]);
        land++; 
    } 
    
    while (land < k && l >= 0){
         v.push_back(arr[l--]);
         land++;
    } 
    while (land < k && r < n){
       v.push_back(arr[r++]);
       land++;
    } 
            return v;
    }
};




int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, k, x;
        cin >> n;
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        cin >> k >> x;
        Solution ob;
        auto ans = ob.printKClosest(arr, n, k, x);
        for (auto e : ans) {
            cout << e << " ";
        }
        cout << "\n";
    }
    return 0;
}
